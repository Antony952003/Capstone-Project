// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeGrievanceRedressal.Migrations
{
    [DbContext(typeof(EmployeeGrievanceContext))]
    [Migration("20240725050340_solutiontitle")]
    partial class solutiontitle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.ApprovalRequest", b =>
                {
                    b.Property<int>("ApprovalRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalRequestId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ApprovalRequestId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ApprovalRequests");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.DocumentUrl", b =>
                {
                    b.Property<int>("DocumentUrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentUrlId"), 1L, 1);

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<int?>("SolutionId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentUrlId");

                    b.HasIndex("GrievanceId");

                    b.HasIndex("SolutionId");

                    b.ToTable("DocumentUrl");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SolutionId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SolutionId")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Grievance", b =>
                {
                    b.Property<int>("GrievanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrievanceId"), 1L, 1);

                    b.Property<DateTime>("DateRaised")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolverId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("GrievanceId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SolverId");

                    b.ToTable("Grievances");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.GrievanceHistory", b =>
                {
                    b.Property<int>("GrievanceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrievanceHistoryId"), 1L, 1);

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<string>("StatusChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrievanceHistoryId");

                    b.HasIndex("GrievanceId");

                    b.ToTable("GrievanceHistories");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Solution", b =>
                {
                    b.Property<int>("SolutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolutionId"), 1L, 1);

                    b.Property<DateTime>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<string>("SolutionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolverId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("SolutionId");

                    b.HasIndex("GrievanceId");

                    b.HasIndex("SolverId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrievanceType")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.ApprovalRequest", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.User", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.DocumentUrl", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.Grievance", "Grievance")
                        .WithMany("DocumentUrls")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeGrievanceRedressal.Models.Solution", null)
                        .WithMany("DocumentUrls")
                        .HasForeignKey("SolutionId");

                    b.Navigation("Grievance");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Feedback", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.User", "Employee")
                        .WithMany("Feedbacks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeGrievanceRedressal.Models.Solution", "Solution")
                        .WithOne("Feedback")
                        .HasForeignKey("EmployeeGrievanceRedressal.Models.Feedback", "SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Grievance", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.User", "Employee")
                        .WithMany("RaisedGrievances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmployeeGrievanceRedressal.Models.User", "Solver")
                        .WithMany()
                        .HasForeignKey("SolverId");

                    b.Navigation("Employee");

                    b.Navigation("Solver");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.GrievanceHistory", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.Grievance", "Grievance")
                        .WithMany("GrievanceHistories")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grievance");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Solution", b =>
                {
                    b.HasOne("EmployeeGrievanceRedressal.Models.Grievance", "Grievance")
                        .WithMany("Solutions")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeGrievanceRedressal.Models.User", "Solver")
                        .WithMany("Solutions")
                        .HasForeignKey("SolverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grievance");

                    b.Navigation("Solver");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Grievance", b =>
                {
                    b.Navigation("DocumentUrls");

                    b.Navigation("GrievanceHistories");

                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.Solution", b =>
                {
                    b.Navigation("DocumentUrls");

                    b.Navigation("Feedback")
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeGrievanceRedressal.Models.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RaisedGrievances");

                    b.Navigation("Solutions");
                });
#pragma warning restore 612, 618
        }
    }
}
